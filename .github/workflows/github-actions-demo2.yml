name: Github Actions Demo 2
run-name: ${{ github.actor }} is testing out Github Actions

on:
  workflow_dispatch:
  pull_request:
    types:
      - closed
  push:
    branches:
      - main

jobs:
  code_style:
    if: ${{ github.event_name == 'push' }}
    name: Code Style Consistency
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "The name of the branch is ${{ github.ref }} and the repository is ${{ github.repository }}"

      - name: Check out the repository to the runner
        uses: actions/checkout@v4

      - name: set up python
        uses: actions/setup-python@v5.2.0
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: ensure code style consistency using 'flake8'
        run: flake8 src
        continue-on-error: true

  run_all:
    if: ${{ github.event.pull_request.merged == true }}
    name: Run All
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.12"]

    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "The name of the branch is ${{ github.ref }} and the repository is ${{ github.repository }}"

      - name: Check out the repository to the runner
        uses: actions/checkout@v4

      - name: set up python
        uses: actions/setup-python@v5.2.0
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: ensure code style consistency using 'flake8'
        run: flake8 src
        continue-on-error: true

      - name: Run the script
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: python src/my_script.py

      - name: Test the script
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: pytest --cov=src src/test_script.py --cov-report=html

  test_script:
    if: ${{ github.event_name == 'push' }}
    name: My job
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.12"]

    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "The name of the branch is ${{ github.ref }} and the repository is ${{ github.repository }}"

      - name: Check out the repository to the runner
        uses: actions/checkout@v4

      - name: set up python
        uses: actions/setup-python@v5.2.0
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: ensure code style consistency using 'flake8'
        run: flake8 src
        continue-on-error: true

      - name: Run the script
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: python src/my_script.py

      - name: Test the script
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: pytest --cov=src src/test_script.py --cov-report=html:testResult/

      - name: Upload the test result
        uses: actions/upload-artifact@v4
        with:
          name: Test-Result
          path: testResult/
          

